plugins {
    id 'java'
}

group 'ru.mrs'
version '1.0-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    fingBugsVersion = "3.0.2"
    junit5Version = "5.8.1"
//    lombokVersion = "1.18.20"

//    springVersion = "5.3.10"
//    springBootVersion = "2.5.5"
//    jacksonVersion = "2.9.8"
//    wsdl4jVersion = "1.6.3"
    jaxbXjcVersion = "3.0.2"
    cxfVersion = "3.4.5"
//    jakartaXmlVersion = "3.0.1"
}

repositories {
    mavenCentral()
}

configurations {
    jaxb
}

test {
    useJUnitPlatform()
}

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:junit5Version'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:junit5Version'
    compileOnly "com.google.code.findbugs:jsr305:$fingBugsVersion"
//    compileOnly "org.projectlombok:lombok:$lombokVersion"
//    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
//    implementation ('org.springframework.boot:spring-boot-starter-web-services') {exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'}
//    implementation 'org.springframework.ws:spring-ws-core'
//    implementation "jakarta.xml.ws:jakarta.xml.ws-api:$jakartaXmlVersion"
//    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:jakartaXmlVersion'
    implementation "org.apache.cxf:cxf-core:$cxfVersion"
//    implementation(files(genJaxb.classesDir).builtBy(genJaxb))
    jaxb (
            "com.sun.xml.bind:jaxb-core:$jaxbXjcVersion",
            "com.sun.xml.bind:jaxb-xjc:$jaxbXjcVersion",
            "com.sun.xml.bind:jaxb-impl:$jaxbXjcVersion"
    )
//    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
task genJaxb {
//    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
//    ext.classesDir = "${buildDir}/classes/jaxb"
//    ext.schema = "http://localhost:8080/ws/countries.wsdl"

    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java/")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'ru.mrs.ws.client.soap.simple.dev',
                schema: 'src/main/resources/def/countries.wsdl',
                language: 'WSDL'
        )
    }
}
compileJava.dependsOn genJaxb
clean.doFirst {
    def jaxbGeneratedDir = file("src/main/java/ru/mrs/ws/client/soap/simple/dev")
    delete jaxbGeneratedDir.path
}
/*test {
    useJUnitPlatform()
}*/
